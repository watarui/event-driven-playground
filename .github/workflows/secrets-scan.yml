name: Secrets Management

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        type: choice
        options:
          - development
          - staging
          - production

jobs:
  rotate-secrets:
    name: Rotate Secrets
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate new secrets
        id: generate
        run: |
          # SECRET_KEY_BASE の生成（64文字）
          SECRET_KEY_BASE=$(openssl rand -hex 32)
          echo "::add-mask::$SECRET_KEY_BASE"
          echo "SECRET_KEY_BASE=$SECRET_KEY_BASE" >> $GITHUB_OUTPUT
          
          # ENCRYPTION_KEY の生成（32文字）
          ENCRYPTION_KEY=$(openssl rand -hex 16)
          echo "::add-mask::$ENCRYPTION_KEY"
          echo "ENCRYPTION_KEY=$ENCRYPTION_KEY" >> $GITHUB_OUTPUT
          
          # DATABASE_PASSWORD の生成
          DATABASE_PASSWORD=$(openssl rand -base64 24 | tr -d "=+/" | cut -c1-20)
          echo "::add-mask::$DATABASE_PASSWORD"
          echo "DATABASE_PASSWORD=$DATABASE_PASSWORD" >> $GITHUB_OUTPUT

      - name: Update GitHub Secrets
        uses: google/secrets-sync-action@v1
        with:
          secrets: |
            SECRET_KEY_BASE=${{ steps.generate.outputs.SECRET_KEY_BASE }}
            ENCRYPTION_KEY=${{ steps.generate.outputs.ENCRYPTION_KEY }}
            DATABASE_PASSWORD=${{ steps.generate.outputs.DATABASE_PASSWORD }}
          github_token: ${{ secrets.ADMIN_TOKEN }}
          
      - name: Create Kubernetes Secret manifest
        run: |
          cat > k8s-secret-${{ github.event.inputs.environment }}.yaml <<EOF
          apiVersion: v1
          kind: Secret
          metadata:
            name: event-driven-playground-secrets
            namespace: event-driven-playground
          type: Opaque
          data:
            DATABASE_USER: $(echo -n "postgres" | base64)
            DATABASE_PASSWORD: $(echo -n "${{ steps.generate.outputs.DATABASE_PASSWORD }}" | base64)
            SECRET_KEY_BASE: $(echo -n "${{ steps.generate.outputs.SECRET_KEY_BASE }}" | base64)
            ENCRYPTION_KEY: $(echo -n "${{ steps.generate.outputs.ENCRYPTION_KEY }}" | base64)
          EOF

      - name: Apply secret to Kubernetes
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig
          export KUBECONFIG=$(pwd)/kubeconfig
          kubectl apply -f k8s-secret-${{ github.event.inputs.environment }}.yaml
          rm -f kubeconfig k8s-secret-${{ github.event.inputs.environment }}.yaml