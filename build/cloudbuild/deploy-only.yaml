# デプロイ専用の Cloud Build 設定（マイグレーションイメージなし）
steps:
  # ============================================
  # 共通のビルダーイメージを作成
  # ============================================
  - id: 'build-base'
    name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--target=builder'
      - '--tag=event-driven-playground-builder:latest'
      - '--file=build/docker/Dockerfile'
      - '--cache-from=${_REGISTRY}/builder-cache:latest'
      - '.'
    waitFor: ['-']

  # ============================================
  # 並列ビルドステップ（マルチステージビルドのターゲットを使用）
  # ============================================
  
  # Client Service のビルド
  - id: 'build-client'
    name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--target=client_service'
      - '--tag=${_REGISTRY}/client-service:${SHORT_SHA}'
      - '--tag=${_REGISTRY}/client-service:latest'
      - '--file=build/docker/Dockerfile'
      - '--cache-from=event-driven-playground-builder:latest'
      - '.'
    waitFor: ['build-base']

  # Command Service のビルド
  - id: 'build-command'
    name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--target=command_service'
      - '--tag=${_REGISTRY}/command-service:${SHORT_SHA}'
      - '--tag=${_REGISTRY}/command-service:latest'
      - '--file=build/docker/Dockerfile'
      - '--cache-from=event-driven-playground-builder:latest'
      - '.'
    waitFor: ['build-base']

  # Query Service のビルド
  - id: 'build-query'
    name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--target=query_service'
      - '--tag=${_REGISTRY}/query-service:${SHORT_SHA}'
      - '--tag=${_REGISTRY}/query-service:latest'
      - '--file=build/docker/Dockerfile'
      - '--cache-from=event-driven-playground-builder:latest'
      - '.'
    waitFor: ['build-base']

  # ============================================
  # イメージのプッシュ
  # ============================================
  - id: 'push-images'
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker push ${_REGISTRY}/client-service:${SHORT_SHA}
        docker push ${_REGISTRY}/client-service:latest
        docker push ${_REGISTRY}/command-service:${SHORT_SHA}
        docker push ${_REGISTRY}/command-service:latest
        docker push ${_REGISTRY}/query-service:${SHORT_SHA}
        docker push ${_REGISTRY}/query-service:latest
    waitFor: ['build-client', 'build-command', 'build-query']

  # ============================================
  # ビルダーキャッシュの更新
  # ============================================
  - id: 'push-builder-cache'
    name: 'gcr.io/cloud-builders/docker'
    args:
      - 'tag'
      - 'event-driven-playground-builder:latest'
      - '${_REGISTRY}/builder-cache:latest'
    waitFor: ['build-base']

  - id: 'push-builder-cache-2'
    name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGISTRY}/builder-cache:latest'
    waitFor: ['push-builder-cache']

# ビルド設定
options:
  machineType: 'E2_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY
  dynamic_substitutions: true

# 置換変数
substitutions:
  _REGISTRY: 'asia-northeast1-docker.pkg.dev/${PROJECT_ID}/event-driven-playground'

# タイムアウト設定（デプロイのみなので短めに設定）
timeout: '900s' # 15分