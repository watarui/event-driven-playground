# Firestore 用の Cloud Build 設定
# PostgreSQL 関連の設定を削除し、Firestore 用の環境変数を追加

steps:
  # Step 1: Build all services with the main Dockerfile
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--target=builder'
      - '--tag=event-driven-playground-builder:latest'
      - '--file=build/docker/Dockerfile'
      - '--cache-from=asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/builder-cache:latest'
      - '.'
    id: 'build-all'
    waitFor: ['-']

  # Step 2: Extract and push Client Service
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--target=client_service'
      - '--tag=asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/client-service:$SHORT_SHA'
      - '--tag=asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/client-service:latest'
      - '--file=build/docker/Dockerfile'
      - '.'
    id: 'build-client-service'
    waitFor: ['build-all']

  # Step 3: Extract and push Command Service
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--target=command_service'
      - '--tag=asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/command-service:$SHORT_SHA'
      - '--tag=asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/command-service:latest'
      - '--file=build/docker/Dockerfile'
      - '.'
    id: 'build-command-service'
    waitFor: ['build-all']

  # Step 4: Extract and push Query Service
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--target=query_service'
      - '--tag=asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/query-service:$SHORT_SHA'
      - '--tag=asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/query-service:latest'
      - '--file=build/docker/Dockerfile'
      - '.'
    id: 'build-query-service'
    waitFor: ['build-all']

  # Step 5: Push builder cache for next builds
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'tag'
      - 'event-driven-playground-builder:latest'
      - 'asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/builder-cache:latest'
    id: 'tag-cache'
    waitFor: ['build-all']

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/builder-cache:latest'
    id: 'push-cache'
    waitFor: ['tag-cache']

  # Deploy Command Service to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-command-service'
    waitFor: ['build-command-service']
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'command-service'
      - '--image'
      - 'asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/command-service:$SHORT_SHA'
      - '--region'
      - 'asia-northeast1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--set-env-vars'
      - 'MIX_ENV=prod,GOOGLE_CLOUD_PROJECT=$PROJECT_ID,DATABASE_ADAPTER=firestore,FIRESTORE_PROJECT_ID=$PROJECT_ID'
      - '--set-secrets'
      - 'SECRET_KEY_BASE=secret-key-base:latest'
      - '--memory'
      - '512Mi'
      - '--cpu'
      - '1'
      - '--min-instances'
      - '0'
      - '--max-instances'
      - '10'
      - '--service-account'
      - 'event-driven-playground-runner@$PROJECT_ID.iam.gserviceaccount.com'

  # Deploy Query Service to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-query-service'
    waitFor: ['build-query-service']
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'query-service'
      - '--image'
      - 'asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/query-service:$SHORT_SHA'
      - '--region'
      - 'asia-northeast1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--set-env-vars'
      - 'MIX_ENV=prod,GOOGLE_CLOUD_PROJECT=$PROJECT_ID,DATABASE_ADAPTER=firestore,FIRESTORE_PROJECT_ID=$PROJECT_ID'
      - '--set-secrets'
      - 'SECRET_KEY_BASE=secret-key-base:latest'
      - '--memory'
      - '512Mi'
      - '--cpu'
      - '1'
      - '--min-instances'
      - '0'
      - '--max-instances'
      - '10'
      - '--service-account'
      - 'event-driven-playground-runner@$PROJECT_ID.iam.gserviceaccount.com'

  # Deploy Client Service to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-client-service'
    waitFor: ['build-client-service']
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'client-service'
      - '--image'
      - 'asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/client-service:$SHORT_SHA'
      - '--region'
      - 'asia-northeast1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--set-env-vars'
      - 'MIX_ENV=prod,GOOGLE_CLOUD_PROJECT=$PROJECT_ID,PHX_HOST=client-service-$PROJECT_ID.asia-northeast1.run.app,DATABASE_ADAPTER=firestore,FIRESTORE_PROJECT_ID=$PROJECT_ID'
      - '--set-secrets'
      - 'SECRET_KEY_BASE=secret-key-base:latest'
      - '--set-secrets'
      - 'FIREBASE_API_KEY=firebase-api-key:latest'
      - '--set-secrets'
      - 'ADMIN_EMAIL=admin-email:latest'
      - '--memory'
      - '1Gi'
      - '--cpu'
      - '2'
      - '--min-instances'
      - '0'
      - '--max-instances'
      - '20'
      - '--port'
      - '4000'
      - '--service-account'
      - 'event-driven-playground-runner@$PROJECT_ID.iam.gserviceaccount.com'

# Images to push to the registry
images:
  # Service images with SHA tags
  - 'asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/command-service:$SHORT_SHA'
  - 'asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/command-service:latest'
  - 'asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/query-service:$SHORT_SHA'
  - 'asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/query-service:latest'
  - 'asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/client-service:$SHORT_SHA'
  - 'asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/client-service:latest'

options:
  logging: GCS_ONLY
  machineType: 'E2_HIGHCPU_8'
  substitution_option: 'ALLOW_LOOSE'
  dynamic_substitutions: true

# Shorter timeout since builds should be faster with caching
timeout: 600s

# Substitutions for versioning
substitutions:
  _REGION: 'asia-northeast1'