# Optimized Cloud Build configuration
# Uses multi-stage builds and caching for faster builds

steps:
  # Step 0: Build migration image with Kaniko (parallel with services)
  - name: 'gcr.io/kaniko-project/executor:latest'
    args:
      - '--dockerfile=Dockerfile.migrate'
      - '--destination=asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/migrate:$SHORT_SHA'
      - '--destination=asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/migrate:latest'
      - '--cache=true'
      - '--cache-ttl=168h'
      - '--compressed-caching=false'
      - '--use-new-run'
      - '--snapshot-mode=redo'
    id: 'build-migrate'
    waitFor: ['-']
  
  # Step 1: Build all services with the main Dockerfile
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--target=builder'
      - '--tag=event-driven-playground-builder:latest'
      - '--file=Dockerfile'
      - '--cache-from=asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/builder-cache:latest'
      - '.'
    id: 'build-all'
    waitFor: ['-']

  # Step 2: Extract and push Client Service
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--target=client_service'
      - '--tag=asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/client-service:$SHORT_SHA'
      - '--tag=asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/client-service:latest'
      - '--file=Dockerfile'
      - '.'
    id: 'build-client-service'
    waitFor: ['build-all']

  # Step 3: Extract and push Command Service
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--target=command_service'
      - '--tag=asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/command-service:$SHORT_SHA'
      - '--tag=asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/command-service:latest'
      - '--file=Dockerfile'
      - '.'
    id: 'build-command-service'
    waitFor: ['build-all']

  # Step 4: Extract and push Query Service
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--target=query_service'
      - '--tag=asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/query-service:$SHORT_SHA'
      - '--tag=asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/query-service:latest'
      - '--file=Dockerfile'
      - '.'
    id: 'build-query-service'
    waitFor: ['build-all']

  # Step 5: Push builder cache for next builds
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'tag'
      - 'event-driven-playground-builder:latest'
      - 'asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/builder-cache:latest'
    id: 'tag-cache'
    waitFor: ['build-all']

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/builder-cache:latest'
    id: 'push-cache'
    waitFor: ['tag-cache']

  # Step 6: Update migration job
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    args:
      - 'gcloud'
      - 'run'
      - 'jobs'
      - 'update'
      - 'database-migrate'
      - '--image=asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/migrate:$SHORT_SHA'
      - '--region=$_REGION'
      - '--project=$PROJECT_ID'
    id: 'update-migrate-job'
    waitFor: ['build-migrate']


# Images to push to the registry
images:
  # Service images with SHA tags
  - 'asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/command-service:$SHORT_SHA'
  - 'asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/command-service:latest'
  - 'asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/query-service:$SHORT_SHA'
  - 'asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/query-service:latest'
  - 'asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/client-service:$SHORT_SHA'
  - 'asia-northeast1-docker.pkg.dev/$PROJECT_ID/event-driven-playground/client-service:latest'
  # Migration image is pushed by Kaniko directly

options:
  logging: GCS_ONLY
  machineType: 'E2_HIGHCPU_8'
  substitution_option: 'ALLOW_LOOSE'
  dynamic_substitutions: true

# Shorter timeout since builds should be faster with caching
timeout: 600s

# Substitutions for versioning
substitutions:
  _REGION: 'asia-northeast1'
